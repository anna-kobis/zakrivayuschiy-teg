/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  min-inline-size: 320px;
  min-block-size: 100dvb;
  color: var(--accent-color, #000);
  font-family: var(--main-font, sans-serif), sans-serif;
  font-size: 14px;
  background-color: var(--background-color, #fff);
  background-image: var(
    --background-image,
    repeating-linear-gradient(to right, #d3d3d3 0 2px, transparent 2px 4px),
    repeating-linear-gradient(#d3d3d3 0 2px, transparent 2px 4px),
    linear-gradient(#e7e7e7 0.01%, #1a1a1a)
  );
  background-size: cover;
  background-attachment: fixed;
  font-variation-settings: 'wght' 400;
}

.content-section {
  max-inline-size: var(
    --width-content,
    clamp(23.4375rem, 16.2852rem + 30.5164vw, 43.75rem)
  );
  margin: 0 auto;
  border: 2px solid currentColor;
  background-color: var(--background-color, #fff);
}

.button {
  position: relative;
  border: 2px solid currentColor;
  transition: box-shadow 0.3s ease;
}

.button::after {
  content: '';
  position: absolute;
  inset: 0;
  background-color: currentColor;
  transition: transform 0.5s ease-in-out;
  transform: translateZ(0) scaleX(0);
  transform-origin: 0;
}

.button:hover::after {
  transform: translateZ(0) scaleX(1);
}

.button:focus-visible {
  box-shadow: 2px 2px 0 currentColor;
  outline: none;
}

.button__text {
  font-family: var(--accent-font, fantasy), fantasy;
  line-height: 0.9;
}

.button__text,
.button__icon {
  position: relative;
  z-index: 1;
  color: var(--hover-color, #fff);
  mix-blend-mode: difference;
}

.button__icon {
  flex-shrink: 0;
  inline-size: var(--icon-size, 21px);
}

.header {
  margin-block: 100px;
  font-family: var(--accent-font, fantasy), fantasy;
  text-align: center;
  text-transform: uppercase;
}

.header__logo {
  display: block;
  margin-block-start: clamp(7.5rem, 7.1479rem + 1.5023vw, 8.5rem);
  font-size: var(
    --logo-size,
    clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem)
  );
}

.header__logo:focus-visible {
  outline: none;
}

.header__title {
  margin-block-start: 21px;
  font-weight: inherit;
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

.theme-menu__list {
  display: grid;
  justify-content: center;
  gap: 12px;
  padding: 24px 0 23px 18px;
}

.theme-menu__button {
  position: relative;
  padding: 0;
  text-transform: inherit;
  transition: color 0.3s ease;
}

.theme-menu__button:disabled::before {
  content: '▶';
  position: absolute;
  inset-inline-start: -20px;
  inset-block-start: 0;
  animation: menu-arrow 0.5s ease-in-out infinite alternate;
}

.theme-menu__button::after {
  content: '';
  display: block;
  block-size: 2px;
  background-color: currentColor;
  transition: transform 0.3s ease;
  transform: scaleX(0);
  transform-origin: 0;
}

.theme-menu__button:disabled {
  pointer-events: none;
}

.theme-menu__button:disabled,
.theme-menu__button:hover,
.theme-menu__button:focus-visible {
  color: rgb(from var(--accent-color, #000) r g b / 0.6);
}

.theme-menu__button:focus-visible {
  outline: none;
}

.theme-menu__button:focus-visible::after {
  transform: scaleX(1);
}

.content__card-item:not(:last-of-type) {
  margin-block-end: 50px;
}

.card__title {
  padding: 5px 10px 4px;
  font-size: 18px;
  line-height: 1.2;
  font-variation-settings: 'wght' var(--title-font-weight, 700);
}

.card__image-wrapper {
  position: relative;
  border-block: 2px solid currentColor;
}

.card__image {
  display: block;
  inline-size: 100%;
  object-fit: cover;
  object-position: center;
  aspect-ratio: 1 / 1;
}

.filter-low-saturate {
  filter: contrast(80%) brightness(120%) saturate(30%);
}

.filter-low-brightness {
  filter: contrast(150%) brightness(75%) saturate(110%);
}

.filter-grayscale {
  filter: contrast(110%) brightness(110%) sepia(30%) grayscale(100%);
}

.filter-brightness {
  filter: contrast(90%) brightness(175%) saturate(200%);
}

.filter-sepia {
  filter: contrast(110%) brightness(80%) saturate(120%) sepia(70%);
}

.filter-contrast {
  filter: contrast(200%);
}

.filter-saturate {
  filter: contrast(130%) brightness(150%) saturate(200%);
}

.filter-hue-rotate {
  filter: contrast(115%) brightness(120%) saturate(200%) hue-rotate(50deg);
}

.card__mark {
  position: absolute;
  inset-inline-end: clamp(0.6875rem, 0.3794rem + 1.3146vw, 1.5625rem);
  inset-block-start: clamp(1.5625rem, 1.5185rem + 0.1878vw, 1.6875rem);
  opacity: 50%;
  font-family: var(--accent-font, fantasy), fantasy;
  text-align: end;
  text-shadow: -1px -1px 0 var(--background-color, #fff),
    0 -1px 0 var(--background-color, #fff),
    1px -1px 0 var(--background-color, #fff),
    1px 0 0 var(--background-color, #fff),
    1px 1px 0 var(--background-color, #fff),
    0 1px 0 var(--background-color, #fff),
    -1px 1px 0 var(--background-color, #fff),
    -1px 0 0 var(--background-color, #fff);
  mix-blend-mode: hard-light;
}

@supports (
  (text-stroke: 1px var(--background-color, #fff)) or
    (-webkit-text-stroke: 1px var(--background-color, #fff))
) {
  .card__mark {
    text-shadow: none;
    -webkit-text-stroke: 1px var(--background-color, #fff);
    text-stroke: 1px var(--background-color, #fff);
    paint-order: stroke;
  }
}

.card__content {
  padding: 25px;
}

.card__text {
  display: grid;
  gap: 27px;
  font-size: 18px;
  line-height: 1.167;
  font-variation-settings: 'wght' var(--text-font-weight, 400);
}

.card__button {
  display: flex;
  justify-content: end;
  align-items: start;
  margin-block-start: 25px;
}

.card__icon-button {
  margin: 2px 6px 0 0;
  padding: 0;
  outline: 2px solid transparent;
  line-height: 0;
  transition: outline 0.3s ease;
}

.card__icon-button:focus-visible {
  outline: 2px solid currentColor;
}

.like-icon {
  inline-size: 39px;
  block-size: 34px;
}

.sparks {
  opacity: 0;
}

.card__like-button {
  min-inline-size: 130px;
  padding: 10px 7px 7px;
}

.save-button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 9px 7px;
  min-inline-size: clamp(19.375rem, 18.7368rem + 2.723vw, 21.1875rem);
  margin-block: 50px 103px;
  padding: 15px;
}

.dialog {
  position: fixed;
  inset-inline-start: 0;
  inset-block-start: 50%;
  grid-template-columns: 39px 1fr;
  align-items: center;
  gap: 29px 20px;
  max-inline-size: clamp(21.3125rem, 20.9604rem + 1.5023vw, 22.3125rem);
  padding: 29px 30px;
  color: inherit;
  text-transform: uppercase;
  transform: translateY(-50%);
}

.dialog[open] {
  display: grid;
}

.dialog::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

.dialog__text {
  margin-block-start: 1px;
  font-family: var(--accent-font, fantasy), fantasy;
  line-height: 1.5;
}

.dialog__button {
  grid-column: -1 / 1;
  padding: 11px 7px 6px;
  text-transform: inherit;
}

@media (width <= 375px) {
  .theme-menu__list {
    padding-inline-start: 21px;
  }

  .save-button {
    flex-direction: column;
    margin-block-end: 100px;
  }

  .dialog {
    padding-inline: 40px;
  }
}
